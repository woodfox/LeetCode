package other

import org.scalatest.FunSuite
import org.scalatest.matchers.ShouldMatchers

class WubiEncodeTest extends FunSuite with ShouldMatchers {
  val t = new WubiEncode

  test("should work") {
    t.encodeIndex("a") should be(0)
    t.encodeIndex("aa") should be(1)
    t.encodeIndex("aaa") should be(2)
    t.encodeIndex("aaaa") should be(3)
    t.encodeIndex("aaab") should be(4)
    t.encodeIndex("aaac") should be(5)
    t.encodeIndex("aaay") should be(27)
    t.encodeIndex("aaba") should be(28)
    t.encodeIndex("aabb") should be(29)
    t.encodeIndex("aaby") should be(52)
    t.encodeIndex("aaca") should be(53)
    t.encodeIndex("aacb") should be(54)
    t.encodeIndex("aacy") should be(77)
    t.encodeIndex("aada") should be(78)
    t.encodeIndex("ayyy") should be(25*25*25-1+3)
    t.encodeIndex("b") should be(25*25*25-1+4)
    t.encodeIndex("ba") should be(25*25*25-1+5)
    t.encodeIndex("baa") should be(25*25*25-1+6)
    t.encodeIndex("baaa") should be(25*25*25-1+7)
    t.encodeIndex("baab") should be(25*25*25-1+8)
    t.encodeIndex("baac") should be(25*25*25-1+9)
    t.encodeIndex("baay") should be(25*25*25-1+31)
    t.encodeIndex("baba") should be(25*25*25-1+32)
    t.encodeIndex("babb") should be(25*25*25-1+33)
    t.encodeIndex("baby") should be(25*25*25-1+56)
    t.encodeIndex("baca") should be(25*25*25-1+57)
    t.encodeIndex("c") should be((25*25*25+3)*2)
    t.encodeIndex("ca") should be((25*25*25+3)*2+1)
    t.encodeIndex("caa") should be((25*25*25+3)*2+2)
    t.encodeIndex("caaa") should be((25*25*25+3)*2+3)
    t.encodeIndex("caab") should be((25*25*25+3)*2+4)
    t.encodeIndex("caay") should be((25*25*25+3)*2+27)
    t.encodeIndex("y") should be((25*25*25+3)*24)
    t.encodeIndex("ya") should be((25*25*25+3)*24+1)
    t.encodeIndex("yaa") should be((25*25*25+3)*24+2)
    t.encodeIndex("yaaa") should be((25*25*25+3)*24+3)
    t.encodeIndex("yaab") should be((25*25*25+3)*24+4)
    t.encodeIndex("yaay") should be((25*25*25+3)*24+27)
    t.encodeIndex("yyyy") should be((25*25*25+3)*25-1)
  }

  test("encodeString should work") {
    t.encodeString(t.encodeIndex("a")) should be("a")
    t.encodeString(t.encodeIndex("aa")) should be("aa")
    t.encodeString(t.encodeIndex("aaa")) should be("aaa")
    t.encodeString(t.encodeIndex("aaaa")) should be("aaaa")
    t.encodeString(t.encodeIndex("aaab")) should be("aaab")
    t.encodeString(t.encodeIndex("aaac")) should be("aaac")
    t.encodeString(t.encodeIndex("aaay")) should be("aaay")
    t.encodeString(t.encodeIndex("aaba")) should be("aaba")
    t.encodeString(t.encodeIndex("aabb")) should be("aabb")
    t.encodeString(t.encodeIndex("aaby")) should be("aaby")
    t.encodeString(t.encodeIndex("aaca")) should be("aaca")
    t.encodeString(t.encodeIndex("aacb")) should be("aacb")
    t.encodeString(t.encodeIndex("aacy")) should be("aacy")
    t.encodeString(t.encodeIndex("aada")) should be("aada")
    t.encodeString(t.encodeIndex("ayyy")) should be("ayyy")
    t.encodeString(t.encodeIndex("b")) should be("b")
    t.encodeString(t.encodeIndex("ba")) should be("ba")
    t.encodeString(t.encodeIndex("baa")) should be("baa")
    t.encodeString(t.encodeIndex("baaa")) should be("baaa")
    t.encodeString(t.encodeIndex("baab")) should be("baab")
    t.encodeString(t.encodeIndex("baac")) should be("baac")
    t.encodeString(t.encodeIndex("baay")) should be("baay")
    t.encodeString(t.encodeIndex("baba")) should be("baba")
    t.encodeString(t.encodeIndex("babb")) should be("babb")
    t.encodeString(t.encodeIndex("baby")) should be("baby")
    t.encodeString(t.encodeIndex("baca")) should be("baca")
    t.encodeString(t.encodeIndex("c")) should be("c")
    t.encodeString(t.encodeIndex("ca")) should be("ca")
    t.encodeString(t.encodeIndex("caa")) should be("caa")
    t.encodeString(t.encodeIndex("caaa")) should be("caaa")
    t.encodeString(t.encodeIndex("caab")) should be("caab")
    t.encodeString(t.encodeIndex("caay")) should be("caay")
    t.encodeString(t.encodeIndex("y")) should be("y")
    t.encodeString(t.encodeIndex("ya")) should be("ya")
    t.encodeString(t.encodeIndex("yaa")) should be("yaa")
    t.encodeString(t.encodeIndex("yaaa")) should be("yaaa")
    t.encodeString(t.encodeIndex("yaab")) should be("yaab")
    t.encodeString(t.encodeIndex("yaay")) should be("yaay")
    t.encodeString(t.encodeIndex("yyyy")) should be("yyyy")
  }
}
